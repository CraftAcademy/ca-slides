!!! ca

name: inverse
layout: true
class: center, middle, inverse
---
# Databases and ORMs
---
## What is a Database and why should I be using it?
---
layout: false
.left-column[
  ## What is a Database?
]
.right-column[
  A **database** is a collection of information that is organized so that it can easily be accessed, managed, and updated.
]
---
layout: false
.left-column[
  ## What is a Database?
  ## DBMS?
]
.right-column[
  A DBMS: Database Management System is a collection of program that will allow you to access a database, manipulate data, and help in representation of data.
  It also helps control access to the database by various users.

  Examples:
  - A telephone directory

]
???
A telephone directory: Used to store information about people, their phone numbers, and other contact details
---
layout: false
.left-column[
  ## What is a Database?
  ## DBMS?
  ## Types of DBMS
]
.right-column[
#### - Navigational DBMS
#### - Relational DBMS
#### - SQL DBMS
#### - NoSQL DBMS
]
???
During this course we'll be using Relational DBMS to build our application. You can have a look at others if you curious about how they work.
---
template: inverse

## Relational Databases
---
layout: false
.left-column[
  ## Relational DBMS
]
.right-column[
A **relational database** is a collection of data items organized as a set of formally-described tables from which data can be accessed or reassembled in many different ways without having to reorganize the database tables.

- Each table contains data in predefined columns.
- Each row contains a unique instance of data defined by the columns.

#### Example:
A typical business order entry database would include:
- a table that described a customer with columns for name, address, phone number, etc.
- Another table would describe an order: product, customer, date, sales price, etc.
]
---
layout: false
.left-column[
  ## Relational DBMS
  ## Relational DBMS Applications
]
.right-column[
#### - MySQL
#### - PostgreSQL
#### - Microsoft SQL
#### - etc.
]
---
template: inverse

## ORM - Object-relational mapping
---
layout: false
.left-column[
  ## What is an ORM?
]
.right-column[
Object-relational mapping (ORM) libraries map database tables to classes.

#### Example:
If
a database has a table called `customers`, our program will have a class named `Customer`.
Rows in this table correspond to objects of the class

Within that object, attributes are
used to get and set the individual columns.
]
---
layout: false
.left-column[
  ## What is an ORM?
  ## Example
]
.right-column[
#### - [ActiveRecord](http://guides.rubyonrails.org/active_record_basics.html)
#### - [DataMapper](http://datamapper.org/)
]
---
template: inverse

## Demo
